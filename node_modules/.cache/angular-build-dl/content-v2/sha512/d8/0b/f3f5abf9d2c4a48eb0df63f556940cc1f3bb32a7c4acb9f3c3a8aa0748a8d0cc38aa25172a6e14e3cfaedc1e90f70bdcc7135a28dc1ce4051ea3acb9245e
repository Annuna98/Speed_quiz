{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-version/admin-participants/admin-participants.component.ts","webpack:///src/app/admin-version/admin-participants/admin-participants.component.html","webpack:///src/app/admin-version/admin/admin.component.ts","webpack:///src/app/admin-version/admin/admin.component.html","webpack:///src/app/admin-version/start/start.component.ts","webpack:///src/app/admin-version/start/start.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/desktop-version/connecting/connecting.component.ts","webpack:///src/app/desktop-version/connecting/connecting.component.html","webpack:///src/app/desktop-version/main/main.component.ts","webpack:///src/app/desktop-version/main/main.component.html","webpack:///src/app/desktop-version/question/question.component.ts","webpack:///src/app/desktop-version/question/question.component.html","webpack:///src/app/local-storage.service.ts","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/player-version/players/players.component.ts","webpack:///src/app/player-version/players/players.component.html","webpack:///src/app/socketio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminParticipantsComponent","socketService","getSession","subscribe","key","push","selector","templateUrl","styleUrls","AdminComponent","router","games","location","href","value","sendGame","console","log","navigate","StartComponent","localStorageService","session","next","AppComponent","title","setupSocketConnection","appRoutes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","ConnectingComponent","myAngularxQrCode","localStorage","getItem","UserKeys","MainComponent","sessionKeys","getSessionForMainPage","sesKey","JSON","parse","success","setItem","sendSession","socket","QuestionComponent","LocalStorageService","window","isLocalStorageSupported","stringify","removeItem","providedIn","NotFoundComponent","PlayersComponent","route","bankName","snapshot","paramMap","get","SocketioService","create","observer","on","res","getGame","game","emit","gameId","sessionKey","SOCKET_ENDPOINT","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\n\n@Component({\n  selector: 'app-admin-participants',\n  templateUrl: './admin-participants.component.html',\n  styleUrls: ['./admin-participants.component.css']\n})\nexport class AdminParticipantsComponent implements OnInit {\n  key: string;\n  keys: string[] = [];\n\n  constructor(private socketService: SocketioService) { }\n\n  ngOnInit(): void {\n    this.socketService\n        .getSession()\n        .subscribe((key: string) => {\n          this.keys.push(key);\n        });\n  }\n\n\n}\n","<div class=\"admin-participants-page\">\n    <p class=\"title\" *ngFor=\"let key of keys\">Game {{key}}</p>\n    <p class=\"title-participants\">Participants</p>\n    <div class=\"list-of-participants\">\n\n    </div>\n    <input class=\"button-start-game\" type=\"submit\" value=\"Continue\"  />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\n// export class GameNumb {\n//\n//   constructor(public game: string) {\n//   }\n//\n// }\nexport class AdminComponent implements OnInit {\n\n  game: string;\n\n\n  games: string[] = ['Game 1', 'Game 2', 'Game 3'];\n  numberGame: string;\n  selectedItem: any;\n\n  constructor(private socketService: SocketioService, private router: Router) {\n\n  }\n\n  // sendGame(){\n  //\n  //   //this.socket.emit('start', { gameId: 1 });\n  //   console.log(\"Game: \" + this.game);\n  //\n  //   // this.socketService.sendGame(this.game);\n  //   //this.game = '';\n  //   //return location.href = \"http://localhost:4200/admin/start\";\n  // }\n\n  ngOnInit(): void {\n    // this.socketService\n    //     .getGame();\n\n  }\n\n\n\n  onSubmit() {\n\n    return location.href = \"http://localhost:4200/admin/start\";\n  }\n\n  sendGame(value) {\n\n    if (value == \"Game 1\"){\n\n      this.socketService.sendGame(1);\n    } else if (value == \"Game 2\"){\n      this.socketService.sendGame(2);\n    } else if(value == \"Game 3\"){\n      this.socketService.sendGame(3);\n    } else {\n      console.log(\"no game id\");\n    }\n      this.router.navigate(['/admin/start']);\n  }\n}\n","<div class=\"admin-page\">\n\n        <p class=\"title\">Start game</p>\n        <p class=\"start-game\">Select game to start</p>\n    <div class=\"form-game\">\n        <mat-form-field >\n\n            <mat-select class=\"select-game\" [(ngModel)]=\"selectedItem\" >\n                <mat-option *ngFor=\"let game of games\" [value]=\"game\">{{game}}</mat-option>\n            </mat-select>\n\n<!--            <mat-form-field appearance=\"fill\">-->\n<!--                <mat-label>Select a game</mat-label>-->\n<!--                <mat-select name=\"game\">-->\n<!--                    <mat-option [value]=\"1\">Game 1</mat-option>-->\n<!--                    <mat-option [value]=\"2\">Game 2</mat-option>-->\n<!--                    <mat-option [value]=\"3\">Game 3</mat-option>-->\n<!--                </mat-select>-->\n<!--            </mat-form-field>-->\n\n        </mat-form-field>\n        <input class=\"button-start-game\" type=\"submit\" value=\"Continue\" (click)=\"sendGame(selectedItem)\"/>\n\n    </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\nimport {LocalStorageService} from \"../../local-storage.service\";\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n  key: string;\n  keys: string[] = [];\n\n\n\n\n  constructor(private socketService: SocketioService, private localStorageService: LocalStorageService) {\n\n  }\n\n\n\n\n\n  ngOnInit(): void {\n\n    this.socketService\n        .getSession()\n        .subscribe((key: string) => {\n\n          console.log(\"Key: \" + key);\n          this.key = key;\n            this.socketService.session = key;\n          // this.keys.push(key);\n        });\n\n\n\n\n\n  }\n\n  next() {\n    return location.href = \"http://localhost:4200/admin/participants\";\n  }\n}\n","<div class=\"admin-start-page\">\n    <p class=\"title\">Start game</p>\n    <div class=\"text\">\n        <p>Game has been started.</p>\n        <p  [(ngModel)]=\"key\" value=\"key\">Please, use Game ID {{key}} to connect</p>\n\n    </div>\n    <input class=\"button-start-game\" type=\"submit\" value=\"Continue\" (click)=\"next()\" />\n\n\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {SocketioService} from \"./socketio.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'SpeedQuiz';\n  game: string;\n  games: string[] = [];\n\n\n  constructor(private socketService: SocketioService) {}\n\n\n  ngOnInit() {\n    this.socketService.setupSocketConnection();\n  }\n}\n","<div>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {Routes, RouterModule} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './desktop-version/main/main.component';\nimport { AdminComponent } from './admin-version/admin/admin.component';\nimport { PlayersComponent } from './player-version/players/players.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { QuestionComponent } from './desktop-version/question/question.component';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ConnectingComponent } from './desktop-version/connecting/connecting.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { QRCodeModule } from 'angularx-qrcode';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport { StartComponent } from './admin-version/start/start.component';\nimport {SocketioService} from \"./socketio.service\";\nimport { AdminParticipantsComponent } from './admin-version/admin-participants/admin-participants.component';\n\n\nconst appRoutes: Routes = [\n  {path: '', component: MainComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'players/:sessionId', component: PlayersComponent},\n  {path: 'connecting', component: ConnectingComponent},\n  {path: 'connecting/question', component: QuestionComponent},\n  {path: 'admin/start', component: StartComponent},\n  {path: 'admin/participants', component: AdminParticipantsComponent},\n  {path: '**', component: NotFoundComponent}\n\n\n\n];\n\n// @ts-ignore\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    AdminComponent,\n    PlayersComponent,\n    QuestionComponent,\n    NotFoundComponent,\n    ConnectingComponent,\n    StartComponent,\n    AdminParticipantsComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    QRCodeModule,\n    MatSelectModule,\n\n\n  ],\n  providers: [SocketioService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\n\n\n@Component({\n  selector: 'app-connecting',\n  templateUrl: './connecting.component.html',\n  styleUrls: ['./connecting.component.css']\n})\nexport class ConnectingComponent implements OnInit {\n\n\n\n  public myAngularxQrCode: string = null;\n  constructor (private socketService: SocketioService) {\n    // console.log(\"sss \" + socketService.session);\n    let session = localStorage.getItem('session');\n    console.log(session);\n    this.myAngularxQrCode = 'http://localhost:4200/players/' + session;\n\n\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"connecting-page\">\n    <div class=\"center\">\n<div class=\"connecting-title\">\n    <p >Подключение игроков</p>\n</div>\n\n<div class=\"qrcode-image\">\n<qrcode [qrdata]=\"myAngularxQrCode\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n</div>\n\n    <div class=\"players\">\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Анна</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Сергей</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Макар</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Ольга</p>\n        </div>\n    </div>\n\n\n</div>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport * as io from \"socket.io-client\";\nimport {SocketioService} from \"../../socketio.service\";\n\nexport class UserKeys {\n  constructor(public key: string) {}\n}\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  public key: string;\n  sessionKey: string;\n  sessionKeys: string[] = [];\n  socket: SocketIOClient.Socket;\n\n\n  constructor(private socketService: SocketioService) { }\n\n  ngOnInit(): void {\n\n    this.socketService.getSessionForMainPage().subscribe((sesKey: string) => {\n      console.log(\"sesKey: \", JSON.parse(sesKey));\n      if (JSON.parse(sesKey).success){\n      // this.socketService.session = 'anya';\n      //   console.log(this.socketService.session);\n      localStorage.setItem('session', this.key);\n      // console.log(localStorage.getItem('session'));\n\n        return location.href = \"http://localhost:4200/connecting\";\n\n      }\n    });\n    // this.socketService\n    //     .getSession()\n    //     .subscribe((sessionKey: string) => {\n    //\n    //\n    //       this.sessionKey = sessionKey;\n    //     });\n    //     console.log(\"sessionKey: \" + this.sessionKey);\n\n\n  }\n\n\n\n  // ValidForm() {\n  //   if (this.key == this.sessionKey){\n  //     //console.log(\"hello\");\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n\n  sendSession() {\n    this.socketService.sendSession(this.key);\n    // if(this.key == this.sessionKey){\n    //   return location.href = \"http://localhost:4200/connecting\";\n    // }\n\n\n    // return false;\n\n  }\n\n  ConnectedFunction() {\n    return this.socket = io.connect('http://localhost:1337');\n\n  }\n}\n","\n<div class=\"main-page\">\n<div class=\"center\">\n\n\n        <p class=\"title\">Speed Quiz</p>\n        <div class=\"enter-your-key\">\n            <label class=\"name-key\">Введите ключ вашей игры</label><br>\n        </div>\n        <mat-form-field class=\"example-form-field\">\n        <mat-label>Ключ</mat-label>\n            <form (ngSubmit)=\"sendSession() \">\n\n                <label>\n                    <input matInput type=\"text\" name=\"key\" [(ngModel)]=\"key\" #name=\"ngModel\" required >\n\n                </label>\n            </form>\n\n        <button mat-button *ngIf=\"key\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"key=''\"><mat-icon>close</mat-icon></button>\n        </mat-form-field>\n<!--    <button (click)=\"ValidForm()\" [disabled]=\"name.invalid || !ValidForm()\" routerLink=\"/connecting\">Отправить</button>-->\n    <div class=\"invalid-key\" [hidden]=\" name.invalid\">Неправильно указан ключ</div>\n\n\n    </div>\n<!--    <div [hidden]=\"name.valid\"></div>-->\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>question works!</p>\n<div id=\"question\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  localStorage: Storage;\n\n  constructor() {\n    this.localStorage = window.localStorage;\n  }\n\n  get(key: string): any {\n    if (this.isLocalStorageSupported) {\n      return JSON.parse(this.localStorage.getItem(key));\n    }\n    return null;\n  }\n  set(key: string, value: any): boolean {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.setItem(key, JSON.stringify(value));\n      return true;\n    }\n    return false;\n  }\n  remove(key: string): boolean {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  get isLocalStorageSupported(): boolean {\n    return !!this.localStorage\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found screen!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SocketioService} from \"../../socketio.service\";\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n  public key: string;\n\n  constructor(private route:ActivatedRoute, private socketService: SocketioService) { }\n  bankName:string;\n\n  ngOnInit(): void {\n\n    this.bankName = this.route.snapshot.paramMap.get('sessionId');\n    console.log(\"BankName: \" + this.bankName);\n  }\n\n}\n","\n<div class=\"player-page\">\n    <div class=\"center\">\n        <p class=\"title\">Speed Quiz</p>\n        <label class=\"name-key\">Введите название вашей команды</label><br>\n        <mat-form-field class=\"example-form-field\">\n            <mat-label>Команда</mat-label>\n            <!--        <form (ngSubmit)=\"TestFunction() && ConnectedFunction()\">-->\n            <form>\n                <label>\n                    <input matInput type=\"text\" name=\"key\" [(ngModel)]=\"key\" #name=\"ngModel\" required >\n                </label>\n            </form>\n\n            <button mat-button *ngIf=\"key\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"key=''\"><mat-icon>close</mat-icon></button>\n        </mat-form-field>\n\n    </div>\n\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {environment} from \"../environments/environment\";\nimport {observable, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketioService {\n  socket;\n  public session: string = '';\n\n\n\n  constructor() { }\n\n\n  // public getSession(){\n  //     this.socket.on('getSession', (res) => {\n  //       console.log(\"We're got session: \" + res);\n  //       return res;\n  //     });\n  // }\n\n\n\n\n  public getSession = () => {\n    return Observable.create((observer) => {\n      this.socket.on('getSession', (session) => {\n        observer.next(session);\n        console.log(\"Session: \" + session);\n\n      });\n    });\n  }\n\n  public getSessionForMainPage = () => {\n    return Observable.create((observer) => {\n      this.socket.on('joined', (res) => {\n        observer.next(res);\n        console.log(\"Session: \" + res);\n\n      });\n    });\n  }\n\n\n\n\n\n  public sendGame(game) {\n    this.socket.emit('start', { gameId: game});\n\n    // localStorage.setItem('session', this.sessionKey);\n    // console.log( localStorage.getItem('session') );\n  }\n\n  public sendSession(session){\n    // Подключаемся к существующей сессии, передав её id\n    // (важно: по условиям сервера в этой сессии должен уже\n    // быть подключён как минимум один пользователь,\n    // иначе подключение не пройдёт)\n    this.socket.emit('join', { sessionKey: session });\n\n\n  }\n\n  setupSocketConnection() {\n\n\n    this.socket = io(environment.SOCKET_ENDPOINT);\n\n\n\n\n    // Подписываемся на событие запуска новой игры\n    this.socket.on('started', (res) => {\n      console.log(res);\n    });\n\n    // Подписываемся на событие запуска новой игры\n    this.socket.on('joined', (res) => {\n\n      console.log(res);\n    });\n\n    // Создаём новую сессию, передав id игры, которую хотим запустить\n    // this.socket.emit('start', { gameId: 1 });\n\n\n\n\n\n  }\n\n  public getGame = () => {\n    return Observable.create((observer) => {\n      this.socket.on('start', (game) => {\n        observer.next(game);\n      });\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}