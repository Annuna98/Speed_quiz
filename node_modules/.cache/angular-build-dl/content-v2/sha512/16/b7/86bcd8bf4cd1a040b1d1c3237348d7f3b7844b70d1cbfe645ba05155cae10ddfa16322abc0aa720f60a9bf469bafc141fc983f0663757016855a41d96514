{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-version/admin-participants/admin-participants.component.ts","./src/app/admin-version/admin-participants/admin-participants.component.html","./src/app/admin-version/admin/admin.component.ts","./src/app/admin-version/admin/admin.component.html","./src/app/admin-version/start/start.component.ts","./src/app/admin-version/start/start.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/desktop-version/connecting/connecting.component.ts","./src/app/desktop-version/connecting/connecting.component.html","./src/app/desktop-version/main/main.component.ts","./src/app/desktop-version/main/main.component.html","./src/app/desktop-version/question/question.component.ts","./src/app/desktop-version/question/question.component.html","./src/app/local-storage.service.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/player-version/players/players.component.ts","./src/app/player-version/players/players.component.html","./src/app/socketio.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\n\n@Component({\n  selector: 'app-admin-participants',\n  templateUrl: './admin-participants.component.html',\n  styleUrls: ['./admin-participants.component.css']\n})\nexport class AdminParticipantsComponent implements OnInit {\n  key: string;\n  keys: string[] = [];\n\n  constructor(private socketService: SocketioService) { }\n\n  ngOnInit(): void {\n    this.socketService\n        .getSession()\n        .subscribe((key: string) => {\n          this.keys.push(key);\n        });\n  }\n\n\n}\n","<div class=\"admin-participants-page\">\n    <p class=\"title\" *ngFor=\"let key of keys\">Game {{key}}</p>\n    <p class=\"title-participants\">Participants</p>\n    <div class=\"list-of-participants\">\n\n    </div>\n    <input class=\"button-start-game\" type=\"submit\" value=\"Continue\"  />\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\n// export class GameNumb {\n//\n//   constructor(public game: string) {\n//   }\n//\n// }\nexport class AdminComponent implements OnInit {\n\n  game: string;\n\n\n  games: string[] = ['Game 1', 'Game 2', 'Game 3'];\n  numberGame: string;\n  selectedItem: any;\n\n  constructor(private socketService: SocketioService, private router: Router) {\n\n  }\n\n  // sendGame(){\n  //\n  //   //this.socket.emit('start', { gameId: 1 });\n  //   console.log(\"Game: \" + this.game);\n  //\n  //   // this.socketService.sendGame(this.game);\n  //   //this.game = '';\n  //   //return location.href = \"http://localhost:4200/admin/start\";\n  // }\n\n  ngOnInit(): void {\n    // this.socketService\n    //     .getGame();\n\n  }\n\n\n\n  onSubmit() {\n\n    return location.href = \"http://localhost:4200/admin/start\";\n  }\n\n  sendGame(value) {\n\n    if (value == \"Game 1\"){\n\n      this.socketService.sendGame(1);\n    } else if (value == \"Game 2\"){\n      this.socketService.sendGame(2);\n    } else if(value == \"Game 3\"){\n      this.socketService.sendGame(3);\n    } else {\n      console.log(\"no game id\");\n    }\n      this.router.navigate(['/admin/start']);\n  }\n}\n","<div class=\"admin-page\">\n\n        <p class=\"title\">Start game</p>\n        <p class=\"start-game\">Select game to start</p>\n    <div class=\"form-game\">\n        <mat-form-field >\n\n            <mat-select class=\"select-game\" [(ngModel)]=\"selectedItem\" >\n                <mat-option *ngFor=\"let game of games\" [value]=\"game\">{{game}}</mat-option>\n            </mat-select>\n\n<!--            <mat-form-field appearance=\"fill\">-->\n<!--                <mat-label>Select a game</mat-label>-->\n<!--                <mat-select name=\"game\">-->\n<!--                    <mat-option [value]=\"1\">Game 1</mat-option>-->\n<!--                    <mat-option [value]=\"2\">Game 2</mat-option>-->\n<!--                    <mat-option [value]=\"3\">Game 3</mat-option>-->\n<!--                </mat-select>-->\n<!--            </mat-form-field>-->\n\n        </mat-form-field>\n        <input class=\"button-start-game\" type=\"submit\" value=\"Continue\" (click)=\"sendGame(selectedItem)\"/>\n\n    </div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\nimport {LocalStorageService} from \"../../local-storage.service\";\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css']\n})\nexport class StartComponent implements OnInit {\n  key: string;\n  keys: string[] = [];\n\n\n\n\n  constructor(private socketService: SocketioService, private localStorageService: LocalStorageService) {\n\n  }\n\n\n\n\n\n  ngOnInit(): void {\n\n    this.socketService\n        .getSession()\n        .subscribe((key: string) => {\n\n          console.log(\"Key: \" + key);\n          this.key = key;\n            this.socketService.session = key;\n          // this.keys.push(key);\n        });\n\n\n\n\n\n  }\n\n  next() {\n    return location.href = \"http://localhost:4200/admin/participants\";\n  }\n}\n","<div class=\"admin-start-page\">\n    <p class=\"title\">Start game</p>\n    <div class=\"text\">\n        <p>Game has been started.</p>\n        <p  [(ngModel)]=\"key\" value=\"key\">Please, use Game ID {{key}} to connect</p>\n\n    </div>\n    <input class=\"button-start-game\" type=\"submit\" value=\"Continue\" (click)=\"next()\" />\n\n\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {SocketioService} from \"./socketio.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'SpeedQuiz';\n  game: string;\n  games: string[] = [];\n\n\n  constructor(private socketService: SocketioService) {}\n\n\n  ngOnInit() {\n    this.socketService.setupSocketConnection();\n  }\n}\n","<div>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {Routes, RouterModule} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './desktop-version/main/main.component';\nimport { AdminComponent } from './admin-version/admin/admin.component';\nimport { PlayersComponent } from './player-version/players/players.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { QuestionComponent } from './desktop-version/question/question.component';\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ConnectingComponent } from './desktop-version/connecting/connecting.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { QRCodeModule } from 'angularx-qrcode';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport { StartComponent } from './admin-version/start/start.component';\nimport {SocketioService} from \"./socketio.service\";\nimport { AdminParticipantsComponent } from './admin-version/admin-participants/admin-participants.component';\n\n\nconst appRoutes: Routes = [\n  {path: '', component: MainComponent},\n  {path: 'admin', component: AdminComponent},\n  {path: 'players/:sessionId', component: PlayersComponent},\n  {path: 'connecting', component: ConnectingComponent},\n  {path: 'connecting/question', component: QuestionComponent},\n  {path: 'admin/start', component: StartComponent},\n  {path: 'admin/participants', component: AdminParticipantsComponent},\n  {path: '**', component: NotFoundComponent}\n\n\n\n];\n\n// @ts-ignore\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    AdminComponent,\n    PlayersComponent,\n    QuestionComponent,\n    NotFoundComponent,\n    ConnectingComponent,\n    StartComponent,\n    AdminParticipantsComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    QRCodeModule,\n    MatSelectModule,\n\n\n  ],\n  providers: [SocketioService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SocketioService} from \"../../socketio.service\";\n\n\n@Component({\n  selector: 'app-connecting',\n  templateUrl: './connecting.component.html',\n  styleUrls: ['./connecting.component.css']\n})\nexport class ConnectingComponent implements OnInit {\n\n\n\n  public myAngularxQrCode: string = null;\n  constructor (private socketService: SocketioService) {\n    // console.log(\"sss \" + socketService.session);\n    let session = localStorage.getItem('session');\n    console.log(session);\n    this.myAngularxQrCode = 'http://localhost:4200/players/' + session;\n\n\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"connecting-page\">\n    <div class=\"center\">\n<div class=\"connecting-title\">\n    <p >Подключение игроков</p>\n</div>\n\n<div class=\"qrcode-image\">\n<qrcode [qrdata]=\"myAngularxQrCode\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n</div>\n\n    <div class=\"players\">\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Анна</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Сергей</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Макар</p>\n        </div>\n        <div class=\"connecting-icons\">\n            <span class=\"material-icons\">speaker_phone</span>\n            <p>Ольга</p>\n        </div>\n    </div>\n\n\n</div>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport * as io from \"socket.io-client\";\nimport {SocketioService} from \"../../socketio.service\";\n\nexport class UserKeys {\n  constructor(public key: string) {}\n}\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  public key: string;\n  sessionKey: string;\n  sessionKeys: string[] = [];\n  socket: SocketIOClient.Socket;\n\n\n  constructor(private socketService: SocketioService) { }\n\n  ngOnInit(): void {\n\n    this.socketService.getSessionForMainPage().subscribe((sesKey: string) => {\n      console.log(\"sesKey: \", JSON.parse(sesKey));\n      if (JSON.parse(sesKey).success){\n      // this.socketService.session = 'anya';\n      //   console.log(this.socketService.session);\n      localStorage.setItem('session', this.key);\n      // console.log(localStorage.getItem('session'));\n\n        return location.href = \"http://localhost:4200/connecting\";\n\n      }\n    });\n    // this.socketService\n    //     .getSession()\n    //     .subscribe((sessionKey: string) => {\n    //\n    //\n    //       this.sessionKey = sessionKey;\n    //     });\n    //     console.log(\"sessionKey: \" + this.sessionKey);\n\n\n  }\n\n\n\n  // ValidForm() {\n  //   if (this.key == this.sessionKey){\n  //     //console.log(\"hello\");\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n\n  sendSession() {\n    this.socketService.sendSession(this.key);\n    // if(this.key == this.sessionKey){\n    //   return location.href = \"http://localhost:4200/connecting\";\n    // }\n\n\n    // return false;\n\n  }\n\n  ConnectedFunction() {\n    return this.socket = io.connect('http://localhost:1337');\n\n  }\n}\n","\n<div class=\"main-page\">\n<div class=\"center\">\n\n\n        <p class=\"title\">Speed Quiz</p>\n        <div class=\"enter-your-key\">\n            <label class=\"name-key\">Введите ключ вашей игры</label><br>\n        </div>\n        <mat-form-field class=\"example-form-field\">\n        <mat-label>Ключ</mat-label>\n            <form (ngSubmit)=\"sendSession() \">\n\n                <label>\n                    <input matInput type=\"text\" name=\"key\" [(ngModel)]=\"key\" #name=\"ngModel\" required >\n\n                </label>\n            </form>\n\n        <button mat-button *ngIf=\"key\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"key=''\"><mat-icon>close</mat-icon></button>\n        </mat-form-field>\n<!--    <button (click)=\"ValidForm()\" [disabled]=\"name.invalid || !ValidForm()\" routerLink=\"/connecting\">Отправить</button>-->\n    <div class=\"invalid-key\" [hidden]=\" name.invalid\">Неправильно указан ключ</div>\n\n\n    </div>\n<!--    <div [hidden]=\"name.valid\"></div>-->\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>question works!</p>\n<div id=\"question\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  localStorage: Storage;\n\n  constructor() {\n    this.localStorage = window.localStorage;\n  }\n\n  get(key: string): any {\n    if (this.isLocalStorageSupported) {\n      return JSON.parse(this.localStorage.getItem(key));\n    }\n    return null;\n  }\n  set(key: string, value: any): boolean {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.setItem(key, JSON.stringify(value));\n      return true;\n    }\n    return false;\n  }\n  remove(key: string): boolean {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  get isLocalStorageSupported(): boolean {\n    return !!this.localStorage\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found screen!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SocketioService} from \"../../socketio.service\";\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n  public key: string;\n\n  constructor(private route:ActivatedRoute, private socketService: SocketioService) { }\n  bankName:string;\n\n  ngOnInit(): void {\n\n    this.bankName = this.route.snapshot.paramMap.get('sessionId');\n    console.log(\"BankName: \" + this.bankName);\n  }\n\n}\n","\n<div class=\"player-page\">\n    <div class=\"center\">\n        <p class=\"title\">Speed Quiz</p>\n        <label class=\"name-key\">Введите название вашей команды</label><br>\n        <mat-form-field class=\"example-form-field\">\n            <mat-label>Команда</mat-label>\n            <!--        <form (ngSubmit)=\"TestFunction() && ConnectedFunction()\">-->\n            <form>\n                <label>\n                    <input matInput type=\"text\" name=\"key\" [(ngModel)]=\"key\" #name=\"ngModel\" required >\n                </label>\n            </form>\n\n            <button mat-button *ngIf=\"key\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"key=''\"><mat-icon>close</mat-icon></button>\n        </mat-form-field>\n\n    </div>\n\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport {environment} from \"../environments/environment\";\nimport {observable, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketioService {\n  socket;\n  public session: string = '';\n\n\n\n  constructor() { }\n\n\n  // public getSession(){\n  //     this.socket.on('getSession', (res) => {\n  //       console.log(\"We're got session: \" + res);\n  //       return res;\n  //     });\n  // }\n\n\n\n\n  public getSession = () => {\n    return Observable.create((observer) => {\n      this.socket.on('getSession', (session) => {\n        observer.next(session);\n        console.log(\"Session: \" + session);\n\n      });\n    });\n  }\n\n  public getSessionForMainPage = () => {\n    return Observable.create((observer) => {\n      this.socket.on('joined', (res) => {\n        observer.next(res);\n        console.log(\"Session: \" + res);\n\n      });\n    });\n  }\n\n\n\n\n\n  public sendGame(game) {\n    this.socket.emit('start', { gameId: game});\n\n    // localStorage.setItem('session', this.sessionKey);\n    // console.log( localStorage.getItem('session') );\n  }\n\n  public sendSession(session){\n    // Подключаемся к существующей сессии, передав её id\n    // (важно: по условиям сервера в этой сессии должен уже\n    // быть подключён как минимум один пользователь,\n    // иначе подключение не пройдёт)\n    this.socket.emit('join', { sessionKey: session });\n\n\n  }\n\n  setupSocketConnection() {\n\n\n    this.socket = io(environment.SOCKET_ENDPOINT);\n\n\n\n\n    // Подписываемся на событие запуска новой игры\n    this.socket.on('started', (res) => {\n      console.log(res);\n    });\n\n    // Подписываемся на событие запуска новой игры\n    this.socket.on('joined', (res) => {\n\n      console.log(res);\n    });\n\n    // Создаём новую сессию, передав id игры, которую хотим запустить\n    // this.socket.emit('start', { gameId: 1 });\n\n\n\n\n\n  }\n\n  public getGame = () => {\n    return Observable.create((observer) => {\n      this.socket.on('start', (game) => {\n        observer.next(game);\n      });\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}